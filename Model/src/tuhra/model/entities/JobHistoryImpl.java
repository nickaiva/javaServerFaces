package tuhra.model.entities;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

import tuhra.model.framework.TuhraEntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 08 11:45:18 EET 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobHistoryImpl extends TuhraEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EmployeeId {
            public Object get(JobHistoryImpl obj) {
                return obj.getEmployeeId();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setEmployeeId((Number)value);
            }
        }
        ,
        StartDate {
            public Object get(JobHistoryImpl obj) {
                return obj.getStartDate();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        EndDate {
            public Object get(JobHistoryImpl obj) {
                return obj.getEndDate();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        JobId {
            public Object get(JobHistoryImpl obj) {
                return obj.getJobId();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setJobId((String)value);
            }
        }
        ,
        DepartmentId {
            public Object get(JobHistoryImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setDepartmentId((Number)value);
            }
        }
        ,
        Employees {
            public Object get(JobHistoryImpl obj) {
                return obj.getEmployees();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setEmployees((EmployeesImpl)value);
            }
        }
        ,
        Departments {
            public Object get(JobHistoryImpl obj) {
                return obj.getDepartments();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setDepartments((TuhraEntityImpl)value);
            }
        }
        ,
        Jobs {
            public Object get(JobHistoryImpl obj) {
                return obj.getJobs();
            }

            public void put(JobHistoryImpl obj, Object value) {
                obj.setJobs((TuhraEntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(JobHistoryImpl object);

        public abstract void put(JobHistoryImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int EMPLOYEES = AttributesEnum.Employees.index();
    public static final int DEPARTMENTS = AttributesEnum.Departments.index();
    public static final int JOBS = AttributesEnum.Jobs.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobHistoryImpl() {
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the EmployeeId
     */
    public Number getEmployeeId() {
        return (Number)getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(Number value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the StartDate
     */
    public Date getStartDate() {
        return (Date)getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for JobId, using the alias name JobId.
     * @return the JobId
     */
    public String getJobId() {
        return (String)getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobId.
     * @param value value to set the JobId
     */
    public void setJobId(String value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the DepartmentId
     */
    public Number getDepartmentId() {
        return (Number)getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(Number value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity EmployeesImpl.
     */
    public EmployeesImpl getEmployees() {
        return (EmployeesImpl)getAttributeInternal(EMPLOYEES);
    }

    /**
     * Sets <code>value</code> as the associated entity EmployeesImpl.
     */
    public void setEmployees(EmployeesImpl value) {
        setAttributeInternal(EMPLOYEES, value);
    }

    /**
     * @return the associated entity tuhra.model.framework.TuhraEntityImpl.
     */
    public TuhraEntityImpl getDepartments() {
        return (TuhraEntityImpl)getAttributeInternal(DEPARTMENTS);
    }

    /**
     * Sets <code>value</code> as the associated entity tuhra.model.framework.TuhraEntityImpl.
     */
    public void setDepartments(TuhraEntityImpl value) {
        setAttributeInternal(DEPARTMENTS, value);
    }

    /**
     * @return the associated entity tuhra.model.framework.TuhraEntityImpl.
     */
    public TuhraEntityImpl getJobs() {
        return (TuhraEntityImpl)getAttributeInternal(JOBS);
    }

    /**
     * Sets <code>value</code> as the associated entity tuhra.model.framework.TuhraEntityImpl.
     */
    public void setJobs(TuhraEntityImpl value) {
        setAttributeInternal(JOBS, value);
    }

    /**
     * @param employeeId key constituent
     * @param startDate key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number employeeId, Date startDate) {
        return new Key(new Object[]{employeeId, startDate});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("tuhra.model.entities.JobHistory");
        }
        return mDefinitionObject;
    }
}
