package tuhra.model.services;

import oracle.jbo.Key;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;

import tuhra.model.entities.ImagesImpl;
import tuhra.model.framework.TuhraApplicationModuleImpl;
import tuhra.model.framework.TuhraViewObjectImpl;
import tuhra.model.queries.main.AllEmployeeImagesRowImpl;
import tuhra.model.queries.main.AllEmployeesImpl;
import tuhra.model.queries.main.AllEmployeesRowImpl;
import tuhra.model.services.common.TuhraService;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Feb 13 09:36:32 EET 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TuhraServiceImpl extends TuhraApplicationModuleImpl implements TuhraService {
    /**
     * This is the default constructor (do not remove).
     */
    public TuhraServiceImpl() {
    }

    public void createNewImageForEmployee(Number employeeId,
                                                                String imageName) {
            AllEmployeesRowImpl empRow = getEmpRow(employeeId);
            if (empRow != null) {
                createAndInsertImage(empRow, imageName);
                getAllEmployeeImages().setAssociationConsistent(true);
            }
    }
    /**
     * Container's getter for EmployeeSearch.
     * @return EmployeeSearch
     */
    public TuhraViewObjectImpl getEmployeeSearch() {
        return (TuhraViewObjectImpl)findViewObject("EmployeeSearch");
    }

    /**
     * Container's getter for DepartmentSelector.
     * @return DepartmentSelector
     */
    public TuhraViewObjectImpl getDepartmentSelector() {
        return (TuhraViewObjectImpl)findViewObject("DepartmentSelector");
    }

    /**
     * Container's getter for DepartmentTree.
     * @return DepartmentTree
     */
    public TuhraViewObjectImpl getDepartmentTree() {
        return (TuhraViewObjectImpl)findViewObject("DepartmentTree");
    }

    /**
     * Container's getter for EmployeesByDepartment.
     * @return EmployeesByDepartment
     */
    public TuhraViewObjectImpl getEmployeesByDepartment() {
        return (TuhraViewObjectImpl)findViewObject("EmployeesByDepartment");
    }

    /**
     * Container's getter for EditEmployee.
     * @return EditEmployee
     */
    public TuhraViewObjectImpl getEditEmployee() {
        return (TuhraViewObjectImpl)findViewObject("EditEmployee");
    }

    /**
     * Container's getter for EmployeeJobHistory.
     * @return EmployeeJobHistory
     */
    public TuhraViewObjectImpl getEmployeeJobHistory() {
        return (TuhraViewObjectImpl)findViewObject("EmployeeJobHistory");
    }

    /**
     * Container's getter for EmployeeBio.
     * @return EmployeeBio
     */
    public TuhraViewObjectImpl getEmployeeBio() {
        return (TuhraViewObjectImpl)findViewObject("EmployeeBio");
    }

    /**
     * Container's getter for AllEmployeeImages.
     * @return AllEmployeeImages
     */
    public TuhraViewObjectImpl getAllEmployeeImages() {
        return (TuhraViewObjectImpl)findViewObject("AllEmployeeImages");
    }

    /**
     * Container's getter for DepartmentSelectionVL1.
     * @return DepartmentSelectionVL1
     */
    public ViewLinkImpl getDepartmentSelectionVL1() {
        return (ViewLinkImpl)findViewLink("DepartmentSelectionVL1");
    }

    /**
     * Container's getter for DepartmentsToEmployeesVL1.
     * @return DepartmentsToEmployeesVL1
     */
    public ViewLinkImpl getDepartmentsToEmployeesVL1() {
        return (ViewLinkImpl)findViewLink("DepartmentsToEmployeesVL1");
    }

    /**
     * Container's getter for EmployeeJobHistoryVL.
     * @return EmployeeJobHistoryVL
     */
    public ViewLinkImpl getEmployeeJobHistoryVL() {
        return (ViewLinkImpl)findViewLink("EmployeeJobHistoryVL");
    }

    /**
     * Container's getter for EmployeeBioVL.
     * @return EmployeeBioVL
     */
    public ViewLinkImpl getEmployeeBioVL() {
        return (ViewLinkImpl)findViewLink("EmployeeBioVL");
    }

    /**
     * Container's getter for EmployeeImagesVL.
     * @return EmployeeImagesVL
     */
    public ViewLinkImpl getEmployeeImagesVL() {
        return (ViewLinkImpl)findViewLink("EmployeeImagesVL");
    }

    private AllEmployeesRowImpl getEmpRow(Number employeeId) {
        
        AllEmployeesRowImpl empRow = null;
        TuhraViewObjectImpl empRows = this.getEditEmployee();
        Key key = new Key(new Object[] {employeeId});
        Row[] hits = empRows.findByKey(key, 1);
        if (hits.length > 0) {
            empRow = (AllEmployeesRowImpl)hits[0];
        }
        return empRow;
    }

    private void createAndInsertImage(AllEmployeesRowImpl empRow,
                                                        String imageName) {
        RowSet empImages = (RowSet) empRow.getAllEmployeeImages();
        //Create an Image
        EntityDefImpl imageDef = EntityDefImpl.findDefObject("tuhra.model.entities.Images");
        ImagesImpl newImage = (ImagesImpl)imageDef.createInstance2(getDBTransaction(),null);
        newImage.setImage(imageName);
        //Initalize the values for, and then Create an Image Usage
        //in the context of the current Employee row
        NameValuePairs initializeUsage = new NameValuePairs();
        initializeUsage.setAttribute("ImageId", newImage.getImageId());
        initializeUsage.setAttribute("DefaultImage", "N");
        AllEmployeeImagesRowImpl newUsage =
        (AllEmployeeImagesRowImpl)empImages.createAndInitRow(initializeUsage);
    }


    /**
     * Container's getter for AllDepartmentCodes.
     * @return AllDepartmentCodes
     */
    public TuhraViewObjectImpl getAllDepartmentCodes() {
        return (TuhraViewObjectImpl)findViewObject("AllDepartmentCodes");
    }

    /**
     * Container's getter for AllJobCodes.
     * @return AllJobCodes
     */
    public TuhraViewObjectImpl getAllJobCodes() {
        return (TuhraViewObjectImpl)findViewObject("AllJobCodes");
    }

    /**
     * Container's getter for UserInfo.
     * @return UserInfo
     */
    public TuhraViewObjectImpl getUserInfo() {
        return (TuhraViewObjectImpl)findViewObject("UserInfo");
    }
}
