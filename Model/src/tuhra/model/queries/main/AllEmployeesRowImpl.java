package tuhra.model.queries.main;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;

import tuhra.model.entities.EmployeesImpl;
import tuhra.model.entities.ImageUsagesImpl;
import tuhra.model.entities.ImagesImpl;
import tuhra.model.framework.TuhraEntityImpl;
import tuhra.model.framework.TuhraViewRowImpl;
import tuhra.model.queries.main.common.AllEmployeesRow;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Feb 13 09:39:52 EET 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllEmployeesRowImpl extends TuhraViewRowImpl implements AllEmployeesRow {
   

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EmployeeId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getEmployeeId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setEmployeeId((DBSequence)value);
            }
        }
        ,
        FirstName {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        LastName {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getLastName();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        Email {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getEmail();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setEmail((String)value);
            }
        }
        ,
        PhoneNumber {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setPhoneNumber((String)value);
            }
        }
        ,
        JobId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getJobId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setJobId((String)value);
            }
        }
        ,
        JobsJobId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getJobsJobId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setJobsJobId((String)value);
            }
        }
        ,
        JobTitle {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getJobTitle();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setJobTitle((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        Salary {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getSalary();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setSalary((Number)value);
            }
        }
        ,
        CommissionPct {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getCommissionPct();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setCommissionPct((Number)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setModifiedDate((Date)value);
            }
        }
        ,
        ManagerId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getManagerId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setManagerId((Number)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        DepartmentId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setDepartmentId((Number)value);
            }
        }
        ,
        HireDate {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getHireDate();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setHireDate((Date)value);
            }
        }
        ,
        EmployeeId1 {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getEmployeeId1();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setEmployeeId1((DBSequence)value);
            }
        }
        ,
        ManagerLastName {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getManagerLastName();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setManagerLastName((String)value);
            }
        }
        ,
        ManagerFirstName {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getManagerFirstName();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setManagerFirstName((String)value);
            }
        }
        ,
        Image {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getImage();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setImage((String)value);
            }
        }
        ,
        ImageId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getImageId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setImageId((DBSequence)value);
            }
        }
        ,
        DefaultImage {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getDefaultImage();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setDefaultImage((String)value);
            }
        }
        ,
        ImageId1 {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getImageId1();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setImageId1((Number)value);
            }
        }
        ,
        UsageType {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getUsageType();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setUsageType((String)value);
            }
        }
        ,
        AssociatedId {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getAssociatedId();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAssociatedId((Number)value);
            }
        }
        ,
        AllJobHistory {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getAllJobHistory();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EmployeeBio {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getEmployeeBio();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AllEmployeeImages {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getAllEmployeeImages();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepartmentsLOVAccessor {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getDepartmentsLOVAccessor();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        JobsLOVAccessor {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getJobsLOVAccessor();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FilteredManagerLOVAccessor {
            public Object get(AllEmployeesRowImpl obj) {
                return obj.getFilteredManagerLOVAccessor();
            }

            public void put(AllEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AllEmployeesRowImpl object);

        public abstract void put(AllEmployeesRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int JOBSJOBID = AttributesEnum.JobsJobId.index();
    public static final int JOBTITLE = AttributesEnum.JobTitle.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int SALARY = AttributesEnum.Salary.index();
    public static final int COMMISSIONPCT = AttributesEnum.CommissionPct.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int MANAGERID = AttributesEnum.ManagerId.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int HIREDATE = AttributesEnum.HireDate.index();
    public static final int EMPLOYEEID1 = AttributesEnum.EmployeeId1.index();
    public static final int MANAGERLASTNAME = AttributesEnum.ManagerLastName.index();
    public static final int MANAGERFIRSTNAME = AttributesEnum.ManagerFirstName.index();
    public static final int IMAGE = AttributesEnum.Image.index();
    public static final int IMAGEID = AttributesEnum.ImageId.index();
    public static final int DEFAULTIMAGE = AttributesEnum.DefaultImage.index();
    public static final int IMAGEID1 = AttributesEnum.ImageId1.index();
    public static final int USAGETYPE = AttributesEnum.UsageType.index();
    public static final int ASSOCIATEDID = AttributesEnum.AssociatedId.index();
    public static final int ALLJOBHISTORY = AttributesEnum.AllJobHistory.index();
    public static final int EMPLOYEEBIO = AttributesEnum.EmployeeBio.index();
    public static final int ALLEMPLOYEEIMAGES = AttributesEnum.AllEmployeeImages.index();
    public static final int DEPARTMENTSLOVACCESSOR = AttributesEnum.DepartmentsLOVAccessor.index();
    public static final int JOBSLOVACCESSOR = AttributesEnum.JobsLOVAccessor.index();
    public static final int FILTEREDMANAGERLOVACCESSOR = AttributesEnum.FilteredManagerLOVAccessor.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AllEmployeesRowImpl() {
    }
    
    private AllEmployeeImagesRowImpl findImageUsagesRowByKey(RowSet imageRows,
                                                                                            Number imageId) {
        AllEmployeeImagesRowImpl retRow = null;
        /*The ordering of the elements in the array passed to the Key constructor
            assumes that the AssociatedId, ImageId, and UsageType attributes
            in the AllEmployeeImages view object definition are present in
            that order: with AssociatedId before ImageId, and ImageId before
            UsageType (they do not need to appear consecutively). Check
            and ensure this is the case; if not, either re-order the attributes in
            AllEmployeeImages to match this order, or re-order the elements in
            the array passed to the Key constructor to match the order that those
            attributes have in the view object definition*/
        Key key =
        new Key(new Object[] { getEmployeeId().getSequenceNumber(), imageId, "E" });
        Row[] hits = imageRows.findByKey(key, 1);
        if (hits.length > 0) {
            retRow = (AllEmployeeImagesRowImpl)hits[0];
        }
        return retRow;
    }
    
    public void defineDefaultImage(Number newDefaultImageId){
        
        Number oldDefaultImageId = getImageId() == null ? null : getImageId().getSequenceNumber();
         if (newDefaultImageId != null && !newDefaultImageId.equals(oldDefaultImageId)) {
                RowSet imageRows = (RowSet) getAllEmployeeImages();
                AllEmployeeImagesRowImpl oldDefaultImageRow =
                                                                    findImageUsagesRowByKey(imageRows, oldDefaultImageId);
                AllEmployeeImagesRowImpl newDefaultImageRow =
                                                                    findImageUsagesRowByKey(imageRows, newDefaultImageId);
             if (newDefaultImageRow != null) {
                    newDefaultImageRow.setDefaultImage("Y"); 
                if (oldDefaultImageRow != null) {
                    oldDefaultImageRow.setDefaultImage("N");
                }
                setEntity(3, newDefaultImageRow.getEmployeeImageUsages());
                setEntity(4, newDefaultImageRow.getImages());
            }
         }
    }
    /**
     * Gets Employees entity object.
     * @return the Employees
     */
    public EmployeesImpl getEmployees() {
        return (EmployeesImpl)getEntity(0);
    }

    /**
     * Gets Jobs entity object.
     * @return the Jobs
     */
    public TuhraEntityImpl getJobs() {
        return (TuhraEntityImpl)getEntity(1);
    }

    /**
     * Gets Manager entity object.
     * @return the Manager
     */
    public EmployeesImpl getManager() {
        return (EmployeesImpl)getEntity(2);
    }

    /**
     * Gets EmployeeImageUsages entity object.
     * @return the EmployeeImageUsages
     */
    public ImageUsagesImpl getEmployeeImageUsages() {
        return (ImageUsagesImpl)getEntity(3);
    }

    /**
     * Gets Images entity object.
     * @return the Images
     */
    public ImagesImpl getImages() {
        return (ImagesImpl)getEntity(4);
    }

    /**
     * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId.
     * @return the EMPLOYEE_ID
     */
    public DBSequence getEmployeeId() {
        return (DBSequence)getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId.
     * @param value value to set the EMPLOYEE_ID
     */
    public void setEmployeeId(DBSequence value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @return the PHONE_NUMBER
     */
    public String getPhoneNumber() {
        return (String) getAttributeInternal(PHONENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @param value value to set the PHONE_NUMBER
     */
    public void setPhoneNumber(String value) {
        setAttributeInternal(PHONENUMBER, value);
    }

    /**
     * Gets the attribute value for JOB_ID using the alias name JobId.
     * @return the JOB_ID
     */
    public String getJobId() {
        return (String) getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB_ID using the alias name JobId.
     * @param value value to set the JOB_ID
     */
    public void setJobId(String value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the attribute value for JOB_ID using the alias name JobsJobId.
     * @return the JOB_ID
     */
    public String getJobsJobId() {
        return (String) getAttributeInternal(JOBSJOBID);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB_ID using the alias name JobsJobId.
     * @param value value to set the JOB_ID
     */
    public void setJobsJobId(String value) {
        setAttributeInternal(JOBSJOBID, value);
    }

    /**
     * Gets the attribute value for JOB_TITLE using the alias name JobTitle.
     * @return the JOB_TITLE
     */
    public String getJobTitle() {
        return (String) getAttributeInternal(JOBTITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB_TITLE using the alias name JobTitle.
     * @param value value to set the JOB_TITLE
     */
    public void setJobTitle(String value) {
        setAttributeInternal(JOBTITLE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for SALARY using the alias name Salary.
     * @return the SALARY
     */
    public Number getSalary() {
        return (Number) getAttributeInternal(SALARY);
    }

    /**
     * Sets <code>value</code> as attribute value for SALARY using the alias name Salary.
     * @param value value to set the SALARY
     */
    public void setSalary(Number value) {
        setAttributeInternal(SALARY, value);
    }

    /**
     * Gets the attribute value for COMMISSION_PCT using the alias name CommissionPct.
     * @return the COMMISSION_PCT
     */
    public Number getCommissionPct() {
        return (Number) getAttributeInternal(COMMISSIONPCT);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMISSION_PCT using the alias name CommissionPct.
     * @param value value to set the COMMISSION_PCT
     */
    public void setCommissionPct(Number value) {
        setAttributeInternal(COMMISSIONPCT, value);
    }

    /**
     * Gets the attribute value for MODIFIED_DATE using the alias name ModifiedDate.
     * @return the MODIFIED_DATE
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_DATE using the alias name ModifiedDate.
     * @param value value to set the MODIFIED_DATE
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for MANAGER_ID using the alias name ManagerId.
     * @return the MANAGER_ID
     */
    public Number getManagerId() {
        return (Number) getAttributeInternal(MANAGERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MANAGER_ID using the alias name ManagerId.
     * @param value value to set the MANAGER_ID
     */
    public void setManagerId(Number value) {
        setAttributeInternal(MANAGERID, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @return the DEPARTMENT_ID
     */
    public Number getDepartmentId() {
        return (Number) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @param value value to set the DEPARTMENT_ID
     */
    public void setDepartmentId(Number value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for HIRE_DATE using the alias name HireDate.
     * @return the HIRE_DATE
     */
    public Date getHireDate() {
        return (Date) getAttributeInternal(HIREDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for HIRE_DATE using the alias name HireDate.
     * @param value value to set the HIRE_DATE
     */
    public void setHireDate(Date value) {
        setAttributeInternal(HIREDATE, value);
    }

    /**
     * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId1.
     * @return the EMPLOYEE_ID
     */
    public DBSequence getEmployeeId1() {
        return (DBSequence)getAttributeInternal(EMPLOYEEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId1.
     * @param value value to set the EMPLOYEE_ID
     */
    public void setEmployeeId1(DBSequence value) {
        setAttributeInternal(EMPLOYEEID1, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name ManagerLastName.
     * @return the LAST_NAME
     */
    public String getManagerLastName() {
        return (String) getAttributeInternal(MANAGERLASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name ManagerLastName.
     * @param value value to set the LAST_NAME
     */
    public void setManagerLastName(String value) {
        setAttributeInternal(MANAGERLASTNAME, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name ManagerFirstName.
     * @return the FIRST_NAME
     */
    public String getManagerFirstName() {
        return (String) getAttributeInternal(MANAGERFIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name ManagerFirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setManagerFirstName(String value) {
        setAttributeInternal(MANAGERFIRSTNAME, value);
    }

    /**
     * Gets the attribute value for IMAGE using the alias name Image.
     * @return the IMAGE
     */
    public String getImage() {
        return (String) getAttributeInternal(IMAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE using the alias name Image.
     * @param value value to set the IMAGE
     */
    public void setImage(String value) {
        setAttributeInternal(IMAGE, value);
    }

    /**
     * Gets the attribute value for IMAGE_ID using the alias name ImageId.
     * @return the IMAGE_ID
     */
    public DBSequence getImageId() {
        return (DBSequence)getAttributeInternal(IMAGEID);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_ID using the alias name ImageId.
     * @param value value to set the IMAGE_ID
     */
    public void setImageId(DBSequence value) {
        setAttributeInternal(IMAGEID, value);
    }

    /**
     * Gets the attribute value for DEFAULT_IMAGE using the alias name DefaultImage.
     * @return the DEFAULT_IMAGE
     */
    public String getDefaultImage() {
        return (String) getAttributeInternal(DEFAULTIMAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEFAULT_IMAGE using the alias name DefaultImage.
     * @param value value to set the DEFAULT_IMAGE
     */
    public void setDefaultImage(String value) {
        setAttributeInternal(DEFAULTIMAGE, value);
    }

    /**
     * Gets the attribute value for IMAGE_ID using the alias name ImageId1.
     * @return the IMAGE_ID
     */
    public Number getImageId1() {
        return (Number) getAttributeInternal(IMAGEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for IMAGE_ID using the alias name ImageId1.
     * @param value value to set the IMAGE_ID
     */
    public void setImageId1(Number value) {
        setAttributeInternal(IMAGEID1, value);
    }

    /**
     * Gets the attribute value for USAGE_TYPE using the alias name UsageType.
     * @return the USAGE_TYPE
     */
    public String getUsageType() {
        return (String) getAttributeInternal(USAGETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for USAGE_TYPE using the alias name UsageType.
     * @param value value to set the USAGE_TYPE
     */
    public void setUsageType(String value) {
        setAttributeInternal(USAGETYPE, value);
    }

    /**
     * Gets the attribute value for ASSOCIATED_ID using the alias name AssociatedId.
     * @return the ASSOCIATED_ID
     */
    public Number getAssociatedId() {
        return (Number) getAttributeInternal(ASSOCIATEDID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSOCIATED_ID using the alias name AssociatedId.
     * @param value value to set the ASSOCIATED_ID
     */
    public void setAssociatedId(Number value) {
        setAttributeInternal(ASSOCIATEDID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AllJobHistory.
     */
    public RowIterator getAllJobHistory() {
        return (RowIterator)getAttributeInternal(ALLJOBHISTORY);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link EmployeeBio.
     */
    public RowIterator getEmployeeBio() {
        return (RowIterator)getAttributeInternal(EMPLOYEEBIO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AllEmployeeImages.
     */
    public RowIterator getAllEmployeeImages() {
        return (RowIterator)getAttributeInternal(ALLEMPLOYEEIMAGES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DepartmentsLOVAccessor.
     */
    public RowSet getDepartmentsLOVAccessor() {
        return (RowSet)getAttributeInternal(DEPARTMENTSLOVACCESSOR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> JobsLOVAccessor.
     */
    public RowSet getJobsLOVAccessor() {
        return (RowSet)getAttributeInternal(JOBSLOVACCESSOR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FilteredManagerLOVAccessor.
     */
    public RowSet getFilteredManagerLOVAccessor() {
        return (RowSet)getAttributeInternal(FILTEREDMANAGERLOVACCESSOR);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
